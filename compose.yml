version: "3"

services:
  wiremock:
    image: "wiremock/wiremock:3.6.0"
    profiles: [ "mock", "all" ]
    ports:
      - '8000:8080'
    volumes:
      - ./Docker/config/mock-server:/home/wiremock/mappings
    entrypoint: [ "/docker-entrypoint.sh", "--global-response-templating", "--disable-gzip", "--verbose" ]
  kafka:
    image: 'bitnami/kafka:3.7'
    profiles: [ "kafka", "all" ]
    ports:
      - '9092:9092'
    environment:
      - KAFKA_CFG_NODE_ID=0
      - KAFKA_CFG_PROCESS_ROLES=controller,broker
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://${KAFKA_HOST:-localhost}:9092
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=0@kafka:9093
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER

  redis:
    image: 'redis:7.2'
    profiles: [ "redis", "all" ]
    ports:
      - '6379:6379'

  tempo:
    image: grafana/tempo:2.3.1
    profiles: [ "observe", "all" ]
    command: [ "-config.file=/etc/tempo.yaml" ]
    volumes:
      - ./Docker/config/tempo/tempo-local.yaml:/etc/tempo.yaml:ro
      - ./tempo-data:/tmp/tempo
    ports:
      - "14268"  # jaeger ingest
      - "9411:9411" # zipkin

  loki:
    image: grafana/loki:2.8.7
    profiles: [ "observe", "all" ]
    command: [ "-config.file=/etc/loki/local-config.yaml" ]
    ports:
      - "3100:3100"                                   # loki needs to be exposed so it receives logs
    environment:
      - JAEGER_AGENT_HOST=tempo
      - JAEGER_ENDPOINT=http://tempo:14268/api/traces # send traces to Tempo
      - JAEGER_SAMPLER_TYPE=const
      - JAEGER_SAMPLER_PARAM=1

  promtail:
    image: grafana/promtail:2.8.7
    profiles: [ "observe", "all" ]
    command: -config.file=/etc/promtail/promtail-config.yaml
    volumes:
      - ./Docker/config/promtail/promtail-config.yaml:/etc/promtail/promtail-config.yaml
      - ./.data/app/logs:/app/logs


  prometheus:
    image: prom/prometheus:v2.48.1
    profiles: [ "observe", "all" ]
    command:
      - --enable-feature=exemplar-storage
      - --config.file=/etc/prometheus/prometheus.yml
    volumes:
      - ./Docker/config/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml:ro
    ports:
      - "9090:9090"

  grafana:
    image: grafana/grafana:9.5.14
    profiles: [ "observe", "all" ]
    volumes:
      - ./Docker/config/grafana/provisioning/datasources:/etc/grafana/provisioning/datasources:ro
      - ./Docker/config/grafana/provisioning/dashboards:/etc/grafana/provisioning/dashboards:ro
    environment:
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin
      - GF_AUTH_DISABLE_LOGIN_FORM=true
    ports:
      - "3200:3000"
# Prometheus: http://localhost:9090/
# Grafana: http://localhost:3200/